package view;

import java.awt.Frame;
import javax.swing.JButton;
import model.Vertex;
import controller.App;
import java.awt.Color;
import java.awt.Component;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import model.LinkedList;

/**
 * Main Menu where the user can interact with the whole app and graph
 *
 * @author Arístides Pérez
 */
public class Menu extends javax.swing.JFrame {

    private final DefaultListModel<String> dictionaryModel = new DefaultListModel<>();
    private LinkedList<Integer> dictionaryCellsColor = new LinkedList<>();

    /**
     * Creates new form Menu to set the board with vertices data
     *
     */
    public Menu() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);

        // dictionary View Initialization
        int index = 0;
        for (String word : App.getDictionary()) {
            dictionaryModel.addElement(word);
            dictionaryCellsColor.insert(index);
        }

        dictionaryList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        dictionaryList.setCellRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                Component c = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

                switch (dictionaryCellsColor.get(index)) {
                    case 1 ->
                        c.setBackground(Color.GREEN); // word found
                    case 2 ->
                        c.setBackground(Color.RED); // word not found
                    default ->
                        c.setBackground(Color.WHITE); // word not searched yet
                }
                return c;
            }
        });
        dictionaryList.setSelectedIndex(0);

        // Board Initialization
        JButton[] boardArray = {aBoard, bBoard, cBoard, dBoard, eBoard,
            fBoard, gBoard, hBoard, iBoard, jBoard, kBoard, lBoard, mBoard,
            nBoard, oBoard, pBoard};
        Vertex[] vertices = App.getGraph().getVertices();

        for (int i = 0; i < App.getGraph().getMaxVertices(); i++) {

            boardArray[i].setText(vertices[i].getData().toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Main = new javax.swing.JPanel();
        titleBar = new javax.swing.JPanel();
        exitButton = new javax.swing.JLabel();
        minimizeButton = new javax.swing.JLabel();
        board = new javax.swing.JPanel();
        aBoard = new javax.swing.JButton();
        bBoard = new javax.swing.JButton();
        cBoard = new javax.swing.JButton();
        dBoard = new javax.swing.JButton();
        eBoard = new javax.swing.JButton();
        fBoard = new javax.swing.JButton();
        gBoard = new javax.swing.JButton();
        hBoard = new javax.swing.JButton();
        iBoard = new javax.swing.JButton();
        jBoard = new javax.swing.JButton();
        kBoard = new javax.swing.JButton();
        lBoard = new javax.swing.JButton();
        mBoard = new javax.swing.JButton();
        nBoard = new javax.swing.JButton();
        oBoard = new javax.swing.JButton();
        pBoard = new javax.swing.JButton();
        scrollDictionary = new javax.swing.JScrollPane();
        dictionaryList = new javax.swing.JList<>();
        wordSep = new javax.swing.JSeparator();
        wordField = new javax.swing.JTextField();
        wordAddButton = new javax.swing.JButton();
        searchSelectedWord = new javax.swing.JButton();
        updateDictionaryButton = new javax.swing.JButton();
        searchDictionaryWords = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        Main.setBackground(new java.awt.Color(255, 255, 255));
        Main.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titleBar.setBackground(new java.awt.Color(255, 255, 255));

        exitButton.setFont(new java.awt.Font("sansserif", 0, 22)); // NOI18N
        exitButton.setForeground(new java.awt.Color(51, 51, 51));
        exitButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitButton.setText("X");
        exitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
        });

        minimizeButton.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        minimizeButton.setForeground(new java.awt.Color(51, 51, 51));
        minimizeButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimizeButton.setText("-");
        minimizeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout titleBarLayout = new javax.swing.GroupLayout(titleBar);
        titleBar.setLayout(titleBarLayout);
        titleBarLayout.setHorizontalGroup(
            titleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titleBarLayout.createSequentialGroup()
                .addContainerGap(596, Short.MAX_VALUE)
                .addComponent(minimizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        titleBarLayout.setVerticalGroup(
            titleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleBarLayout.createSequentialGroup()
                .addGroup(titleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minimizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Main.add(titleBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 40));

        board.setBackground(new java.awt.Color(255, 255, 255));

        aBoard.setBackground(new java.awt.Color(51, 51, 51));
        aBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        aBoard.setForeground(new java.awt.Color(255, 255, 255));
        aBoard.setText("A");
        aBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        aBoard.setFocusPainted(false);
        aBoard.setFocusable(false);

        bBoard.setBackground(new java.awt.Color(51, 51, 51));
        bBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        bBoard.setForeground(new java.awt.Color(255, 255, 255));
        bBoard.setText("B");
        bBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        bBoard.setFocusable(false);

        cBoard.setBackground(new java.awt.Color(51, 51, 51));
        cBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        cBoard.setForeground(new java.awt.Color(255, 255, 255));
        cBoard.setText("C");
        cBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        cBoard.setFocusable(false);

        dBoard.setBackground(new java.awt.Color(51, 51, 51));
        dBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        dBoard.setForeground(new java.awt.Color(255, 255, 255));
        dBoard.setText("D");
        dBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        dBoard.setFocusable(false);

        eBoard.setBackground(new java.awt.Color(51, 51, 51));
        eBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        eBoard.setForeground(new java.awt.Color(255, 255, 255));
        eBoard.setText("E");
        eBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        eBoard.setFocusable(false);

        fBoard.setBackground(new java.awt.Color(51, 51, 51));
        fBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        fBoard.setForeground(new java.awt.Color(255, 255, 255));
        fBoard.setText("F");
        fBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        fBoard.setFocusable(false);

        gBoard.setBackground(new java.awt.Color(51, 51, 51));
        gBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        gBoard.setForeground(new java.awt.Color(255, 255, 255));
        gBoard.setText("G");
        gBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        gBoard.setFocusable(false);

        hBoard.setBackground(new java.awt.Color(51, 51, 51));
        hBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        hBoard.setForeground(new java.awt.Color(255, 255, 255));
        hBoard.setText("H");
        hBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        hBoard.setFocusable(false);

        iBoard.setBackground(new java.awt.Color(51, 51, 51));
        iBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        iBoard.setForeground(new java.awt.Color(255, 255, 255));
        iBoard.setText("I");
        iBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        iBoard.setFocusable(false);

        jBoard.setBackground(new java.awt.Color(51, 51, 51));
        jBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        jBoard.setForeground(new java.awt.Color(255, 255, 255));
        jBoard.setText("J");
        jBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jBoard.setFocusable(false);

        kBoard.setBackground(new java.awt.Color(51, 51, 51));
        kBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        kBoard.setForeground(new java.awt.Color(255, 255, 255));
        kBoard.setText("K");
        kBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        kBoard.setFocusable(false);

        lBoard.setBackground(new java.awt.Color(51, 51, 51));
        lBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        lBoard.setForeground(new java.awt.Color(255, 255, 255));
        lBoard.setText("L");
        lBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        lBoard.setFocusable(false);

        mBoard.setBackground(new java.awt.Color(51, 51, 51));
        mBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        mBoard.setForeground(new java.awt.Color(255, 255, 255));
        mBoard.setText("M");
        mBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        mBoard.setFocusable(false);

        nBoard.setBackground(new java.awt.Color(51, 51, 51));
        nBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        nBoard.setForeground(new java.awt.Color(255, 255, 255));
        nBoard.setText("N");
        nBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        nBoard.setFocusable(false);

        oBoard.setBackground(new java.awt.Color(51, 51, 51));
        oBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        oBoard.setForeground(new java.awt.Color(255, 255, 255));
        oBoard.setText("O");
        oBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        oBoard.setFocusable(false);

        pBoard.setBackground(new java.awt.Color(51, 51, 51));
        pBoard.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 36)); // NOI18N
        pBoard.setForeground(new java.awt.Color(255, 255, 255));
        pBoard.setText("P");
        pBoard.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pBoard.setFocusable(false);

        javax.swing.GroupLayout boardLayout = new javax.swing.GroupLayout(board);
        board.setLayout(boardLayout);
        boardLayout.setHorizontalGroup(
            boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
            .addGroup(boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(boardLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(boardLayout.createSequentialGroup()
                            .addComponent(aBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(bBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(cBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(dBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(boardLayout.createSequentialGroup()
                            .addComponent(eBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(fBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(gBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(hBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(boardLayout.createSequentialGroup()
                            .addComponent(iBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(jBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(kBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(lBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(boardLayout.createSequentialGroup()
                            .addComponent(mBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(nBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(oBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(pBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        boardLayout.setVerticalGroup(
            boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
            .addGroup(boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(boardLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(aBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(10, 10, 10)
                    .addGroup(boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(eBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(gBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(hBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(10, 10, 10)
                    .addGroup(boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(iBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(kBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(10, 10, 10)
                    .addGroup(boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(oBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        Main.add(board, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        dictionaryList.setModel(dictionaryModel);
        scrollDictionary.setViewportView(dictionaryList);

        Main.add(scrollDictionary, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 80, 230));

        wordSep.setBackground(new java.awt.Color(255, 255, 255));
        wordSep.setForeground(new java.awt.Color(0, 0, 0));
        Main.add(wordSep, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 230, 260, 20));

        wordField.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        wordField.setText("Metropolitana");
        wordField.setBorder(null);
        wordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordFieldActionPerformed(evt);
            }
        });
        wordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                wordFieldKeyTyped(evt);
            }
        });
        Main.add(wordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 200, 260, 20));

        wordAddButton.setBackground(new java.awt.Color(255, 110, 66));
        wordAddButton.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        wordAddButton.setForeground(new java.awt.Color(255, 255, 255));
        wordAddButton.setText("Añadir Palabra");
        wordAddButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        wordAddButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        wordAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordAddButtonActionPerformed(evt);
            }
        });
        Main.add(wordAddButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 240, 260, 30));

        searchSelectedWord.setBackground(new java.awt.Color(255, 110, 66));
        searchSelectedWord.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        searchSelectedWord.setForeground(new java.awt.Color(255, 255, 255));
        searchSelectedWord.setText("Buscar una Palabra");
        searchSelectedWord.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchSelectedWord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchSelectedWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSelectedWordActionPerformed(evt);
            }
        });
        Main.add(searchSelectedWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 260, 30));

        updateDictionaryButton.setBackground(new java.awt.Color(255, 110, 66));
        updateDictionaryButton.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        updateDictionaryButton.setForeground(new java.awt.Color(255, 255, 255));
        updateDictionaryButton.setText("Actualizar Archivo Actual");
        updateDictionaryButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateDictionaryButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateDictionaryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDictionaryButtonActionPerformed(evt);
            }
        });
        Main.add(updateDictionaryButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 150, 260, 30));

        searchDictionaryWords.setBackground(new java.awt.Color(255, 110, 66));
        searchDictionaryWords.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        searchDictionaryWords.setForeground(new java.awt.Color(255, 255, 255));
        searchDictionaryWords.setText("Buscar Todas las Palabras");
        searchDictionaryWords.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchDictionaryWords.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchDictionaryWords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDictionaryWordsActionPerformed(evt);
            }
        });
        Main.add(searchDictionaryWords, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, 260, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void minimizeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeButtonMouseClicked
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_minimizeButtonMouseClicked

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitButtonMouseClicked

    private void searchSelectedWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSelectedWordActionPerformed
        String selectedWord = dictionaryList.getSelectedValue();
        int selectedWordI = dictionaryList.getSelectedIndex();
        
        String[] options = {"DFS", "BFS"};
        int result = JOptionPane.showOptionDialog(this,
                "¿Cuál algoritmo de recorrido quieres usar?",
                "Presiona una opción",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null,
                options, options[1]);

        if (result == 1 || result == 0) {
            int isWord = App.searchWord(result, selectedWord);
            dictionaryCellsColor.set(selectedWordI, isWord == 1 ? 1 : 2);
            dictionaryList.repaint();
            
            if (isWord == -1) {
                JOptionPane.showMessageDialog(this, "La palabra " + selectedWord
                        + " no puede ser encontrada debido a que el tablero no contiene su primera letra");
            }
        }
    }//GEN-LAST:event_searchSelectedWordActionPerformed

    private void wordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordFieldActionPerformed
        wordAddButtonActionPerformed(evt);
    }//GEN-LAST:event_wordFieldActionPerformed

    private void wordFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wordFieldKeyTyped
        if (wordField.getText().equals("Metropolitana")) {
            wordField.setText("");
        }
    }//GEN-LAST:event_wordFieldKeyTyped

    /**
     * add a word to the controller and view dictionary, only if the word is
     * valid
     *
     * @param evt
     */
    private void wordAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordAddButtonActionPerformed
        boolean success = App.addDictionaryWord(wordField.getText().toUpperCase());

        if (success) {
            dictionaryCellsColor.insert(0);
            dictionaryModel.addElement(wordField.getText().toUpperCase());
            JOptionPane.showMessageDialog(this, "La palabra " + wordField.getText().toUpperCase() + " ha sido añadida con éxito");
        } else {
            JOptionPane.showMessageDialog(this, "La palabra " + wordField.getText().toUpperCase() + " no es válida, "
                    + "debe contener 3 letras o más sin caracter especial o no estar en el diccionario");
        }
    }//GEN-LAST:event_wordAddButtonActionPerformed

    /**
     * shows an optionPane to let the user choose to update the loaded file or
     * not, it calls controller App
     *
     * @param evt
     */
    private void updateDictionaryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDictionaryButtonActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "¿Estás seguro que quieres actualizar el archivo cargado?",
                "Presiona una opción", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            boolean success = App.updateDictionaryFile();
            if (success) {
                JOptionPane.showMessageDialog(this, "Tu archivo cargado ha sido actualizado con éxito");
            } else {
                JOptionPane.showMessageDialog(this, "Tu archivo no se actualizó correctamente, inténtalo de nuevo");
            }
        }
    }//GEN-LAST:event_updateDictionaryButtonActionPerformed
    
    /**
     * Shows an optionPane to let the user choose a traverse algorithm, calls
     * App Controller, shows the delayed time and updates the JList
     * 
     * @param evt 
     */
    private void searchDictionaryWordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDictionaryWordsActionPerformed
        String[] options = {"DFS", "BFS"};
        int result = JOptionPane.showOptionDialog(this,
                "¿Cuál algoritmo de recorrido quieres usar?",
                "Presiona una opción",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null,
                options, options[1]);
        
        boolean[] wordsFound = result == 1 || result == 0 ? App.searchWords(result) : null;

        if (wordsFound != null) {
            double msTime = App.getMsTime();

            for (int i = 0; i < wordsFound.length; i++) {
                dictionaryCellsColor.set(i, wordsFound[i] ? 1 : 2);
            }

            dictionaryList.repaint();
            JOptionPane.showMessageDialog(this, "El tiempo en encontrar todas las palabras fue de " + msTime + " ms");
        }
    }//GEN-LAST:event_searchDictionaryWordsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Main;
    private javax.swing.JButton aBoard;
    private javax.swing.JButton bBoard;
    private javax.swing.JPanel board;
    private javax.swing.JButton cBoard;
    private javax.swing.JButton dBoard;
    private javax.swing.JList<String> dictionaryList;
    private javax.swing.JButton eBoard;
    private javax.swing.JLabel exitButton;
    private javax.swing.JButton fBoard;
    private javax.swing.JButton gBoard;
    private javax.swing.JButton hBoard;
    private javax.swing.JButton iBoard;
    private javax.swing.JButton jBoard;
    private javax.swing.JButton kBoard;
    private javax.swing.JButton lBoard;
    private javax.swing.JButton mBoard;
    private javax.swing.JLabel minimizeButton;
    private javax.swing.JButton nBoard;
    private javax.swing.JButton oBoard;
    private javax.swing.JButton pBoard;
    private javax.swing.JScrollPane scrollDictionary;
    private javax.swing.JButton searchDictionaryWords;
    private javax.swing.JButton searchSelectedWord;
    private javax.swing.JPanel titleBar;
    private javax.swing.JButton updateDictionaryButton;
    private javax.swing.JButton wordAddButton;
    private javax.swing.JTextField wordField;
    private javax.swing.JSeparator wordSep;
    // End of variables declaration//GEN-END:variables

}
